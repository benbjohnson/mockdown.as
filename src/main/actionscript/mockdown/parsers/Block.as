package mockdown.parsers
{
/**
 *	This class represents one or more lines grouped together by a common 
 *	indentation level. A tree of block objects is generated by the BlockParser.
 */
public class Block
{
	//--------------------------------------------------------------------------
	//
	//	Constructor
	//
	//--------------------------------------------------------------------------
	
	/**
	 *	Constructor.
	 */
	public function Block(parent:Block=null, level:int=-1, lineNumber:int=0,
						 content:String=null)
	{
		this.parent     = parent;
		this.level      = level;
		this.lineNumber = lineNumber;
		this.content    = content;
	}


	//--------------------------------------------------------------------------
	//
	//	Properties
	//
	//--------------------------------------------------------------------------
	
	/**
	 *	The parent is the preceeding block that has a lower level that this
	 *	block.
	 */
	public var parent:Block;
	
	/**
	 *	The indentation level of the block.
	 */
	public var level:int = -1;
	
	/**
	 *	The line number that this block starts on.
	 */
	public var lineNumber:int = -1;
	
	/**
	 *	The unindented content of the block.
	 */
	public var content:String;
	

	//---------------------------------
	//	Children
	//---------------------------------
	
	private var _children:Array = [];
	
	/**
	 *	The blocks immediately after this block that have a higher indentation
	 *	level.
	 */
	public function get children():Array
	{
		return _children.slice();
	}


	//--------------------------------------------------------------------------
	//
	//	Methods
	//
	//--------------------------------------------------------------------------
	
	//---------------------------------
	//	Children
	//---------------------------------
	
	/**
	 *	Appends a block to the list of children.
	 *	
	 *	@param child  The block to append.
	 */
	public function addChild(child:Block):void
	{
		if(child != null) {
			child.parent = this;
			_children.push(child);
		}
	}
	
	/**
	 *	Removes a block from the list of children.
	 *	
	 *	@param child  The block to remove.
	 */
	public function removeChild(child:Block):void
	{
		if(child != null && children.indexOf(child) != -1) {
			child.parent = null;
			_children.splice(children.indexOf(child), 1);
		}
	}
}
}
